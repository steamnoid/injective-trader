[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "injective-sniper-bot"
version = "0.1.0"
description = "Autonomous Trading Bot for Injective Protocol DEX"
authors = [
    {name = "Injective Sniper Bot Team"}
]
dependencies = [
    "pydantic>=2.5.0",
    "injective-py>=1.6.0",
    "rich>=13.7.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "websockets>=12.0",
    "asyncio-mqtt>=0.16.0",
    "numba>=0.58.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "mypy>=1.7.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "pre-commit>=3.5.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-v --strict-markers --tb=short"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "performance: Performance tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100
